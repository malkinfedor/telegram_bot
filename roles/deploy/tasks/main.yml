- name: Check if EPEL repo is already configured.
  become: yes
  stat: path=/etc/yum.repos.d/epel.repo
  register: epel_repofile_result

- name: Install EPEL repo.
  become: yes
  yum:
   name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
   state: present
  register: result
  until: 'result.rc == 0'
  retries: 5
  delay: 10
  when: not epel_repofile_result.stat.exists

- name: Import EPEL GPG key.
  become: yes
  rpm_key:
   key: "/etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7"
   state: present
  when: not epel_repofile_result.stat.exists

- name: Install all need apps and tools
  become: yes
  yum: 
   name: "{{ item }}" 
   state: present
  with_items:
   - "python34"
   - "python34-setuptools"
   - "python-virtualenv"
   - "git"

- name: Install pip with easy_install
  become: yes
  easy_install: 
   name: pip
   executable: easy_install-3.4
   state: latest

- name: Clone repo
  become: no
  git:
    repo: "{{ repo }}"
    dest: "{{ path_app }}/{{ app_name }}"
    update: yes
    version: master
    force: yes

- name: Create venv 
  become: no
  pip:
    requirements: "{{ path_app }}/{{ app_name }}/requirements.txt"
    virtualenv: "{{ path_app }}/{{ app_name }}/env"
    virtualenv_python: python3.4

- name: Copy bash script for start bot
  become: yes
  template:
   src: bot.sh
   dest: "{{ path_app }}/{{ app_name }}/bot.sh"
   mode: 755

- name: Copy template systemd service config
  become: yes
  template: 
   src: "{{ app_name }}.service"
   dest: "/etc/systemd/system/{{ app_name }}.service" 

- name: Start systemd app service
  become: yes
  systemd: 
   name: "{{ app_name }}.service" 
   state: restarted 
   enabled: yes

